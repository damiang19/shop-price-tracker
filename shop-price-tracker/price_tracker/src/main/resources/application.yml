spring:
  profiles:
      active: dev
  application:
    name: pricetracker
  config:
    import: "${SPRING_CONFIG_IMPORT}"
  jpa:
    show-sql: true
  sql:
    init:
      mode: always
  cloud:
    openfeign:
      circuitbreaker:
        enabled: true
eureka:
  instance:
    preferIpAddress: true
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: "${EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE}"
resilience4j.circuitbreaker:
  slidingWindowSize: 10  # sprawdz 10 requestow. Na podstawie powodzenia ustaw odpowiedni stan
  permittedNumberOfCallsInHalfOpenState: 2 # ilosc requestow wykonanych w stanie half_open
  failureRateThreshold: 50 # ile procent requestow musi zakonczyc sie niepowodzeniem aby stan zostal ustawiony na otwarty
  waitDurationInOpenState: 10000 # jak dlugo ma pozostac w open state
management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
  endpoint:
    health:
      probes:
        enabled: true
    shutdown:
      enabled: true
  info:
    env:
      enabled: true

info:
  application:
    name: "price-tracker"
    description: "Application which store scrapped data"
    version: "0.0.1-ALPHA"

server.error.include-message: always
logging.level.org.hibernate.SQL: DEBUG
