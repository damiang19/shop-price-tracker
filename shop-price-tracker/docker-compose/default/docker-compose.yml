services :
  redis:
    image: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      timeout: 10s
      retries: 10
    deploy:
      resources:
        limits:
          memory: 1000m
    networks:
      - shop-price-tracker

  pricetrackerdb:
    image: postgres:latest
    container_name: pricetrackerdb
    ports:
     - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: docker
      POSTGRES_DB: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      timeout: 10s
      retries: 10
      interval: 10s
      start_period: 10s
    deploy:
      resources:
        limits:
          memory: 700m
    networks:
      - shop-price-tracker

  scrapperdb:
    image: postgres:latest
    container_name: scrapperdb
    ports:
      - 5433:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: docker
      POSTGRES_DB: scrapper
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      timeout: 10s
      retries: 10
      interval: 10s
      start_period: 10s
    deploy:
      resources:
        limits:
          memory: 700m
    networks:
      - shop-price-tracker
  configserver:
    image: damiang19/configserver:s1
    container_name: config-server-ms
    healthcheck:
      test: "curl --fail --silent localhost:8071/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    ports:
      - "8071:8071"
    deploy:
      resources:
        limits:
          memory: 1000m
    networks:
      - shop-price-tracker
  eurekaserver:
    image: damiang19/eurekaserver:s1
    container_name: eurekaserver-ms
    healthcheck:
      test: "curl --fail --silent localhost:8070/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    depends_on:
      configserver:
        condition: service_healthy
    ports:
      - "8070:8070"
    deploy:
      resources:
        limits:
          memory: 1000m
    networks:
      - shop-price-tracker
    environment:
      SPRING_CONFIG_IMPORT: "configserver:http://configserver:8071"
      SPRING_PROFILES_ACTIVE: default
      SPRING_APPLICATION_NAME: "eurekaserver"

  price-tracker :
    image: damiang19/price_tracker:s1
    container_name: price-tracker-ms
    healthcheck:
      test: "curl --fail --silent localhost:8080/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    depends_on:
      pricetrackerdb:
        condition: service_healthy
      configserver:
        condition: service_healthy
      eurekaserver:
        condition: service_healthy
    ports:
      - "8080:8080"
    deploy:
      resources:
        limits:
          memory: 1000m
    networks:
      - shop-price-tracker
    environment:
      SPRING_CONFIG_IMPORT: "configserver:http://configserver:8071"
      SPRING_APPLICATION_NAME: "pricetracker"
      SPRING_PROFILES_ACTIVE: dev
      SPRING_DATASOURCE_URL: "jdbc:postgresql://pricetrackerdb:5432/postgres"
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://eurekaserver:8070/eureka

  scrapper:
    image: damiang19/scrapper:s1
    container_name: scrapper-ms
    healthcheck:
      test: "curl --fail --silent localhost:8090/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    depends_on:
      scrapperdb:
        condition: service_healthy
      configserver:
        condition: service_healthy
      eurekaserver:
        condition: service_healthy
    ports:
      - "8090:8090"
    deploy:
      resources:
        limits:
          memory: 1000m
    networks:
      - shop-price-tracker
    environment:
      SPRING_APPLICATION_NAME: "scrapper"
      SPRING_CONFIG_IMPORT: "configserver:http://configserver:8071"
      SPRING_PROFILES_ACTIVE: dev
      SPRING_DATASOURCE_URL: "jdbc:postgresql://scrapperdb:5432/scrapper"
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://eurekaserver:8070/eureka
  gatewayserver:
    image: damiang19/gatewayserver:s1
    container_name: gateway-server-ms
    depends_on:
      scrapper:
        condition: service_healthy
      price-tracker:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8072:8072"
    deploy:
      resources:
        limits:
          memory: 1000m
    networks:
      - shop-price-tracker
    environment:
      SPRING_CONFIG_IMPORT: "configserver:http://configserver:8071"
      SPRING_APPLICATION_NAME: "gatewayserver"
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://eurekaserver:8070/eureka
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
      SPRING_DATA_REDIS_TIMEOUT: 1s
networks:
  shop-price-tracker:
    driver: "bridge"